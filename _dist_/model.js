import y from"../web_modules/odex.js";import h from"./num.js";import z from"./unzip.js";export let COMPARTMENTS=["Susceptible","Exposed","Infected","Severely Infected","Recovered","Dead"];let A=["0-19","20-59","60+"],B=[1e-4,.0032,.0328];export let WORLD_POP={Africa:[.507,.438,.055],Americas:[.293,.541,.166],Asia:[.312,.558,.131],Europe:[.211,.532,.257]};Object.keys(WORLD_POP).forEach(d=>WORLD_POP[d]=h.array(WORLD_POP[d]));let C=h.pack([[7.86,5.22,.5],[2.37,7.69,1.06],[1.19,5.38,1.92]]);function D(d,a){let c=d,i=a,j=h.zeros([c.size,c.size]);return c.data.forEach((m,b)=>{c.data.forEach((o,l)=>{let r=(i.get(b,l)*c.get(b)+i.get(l,b)*c.get(l))/(2*c.get(b));j.set(b,l,r)})}),j}export let CONTACT_MATRICES_0={};Object.keys(WORLD_POP).forEach(d=>CONTACT_MATRICES_0[d]=D(WORLD_POP[d],C));let E={"Cancel mass gatherings":{chi:.72},Quarantine:{chi:.63},"Quarantine and tracing":{chi:.48},"School closure":{cohort_chi:[[.25,.8,1.52],[.8,.74,1],[1.52,1,1]]},"Shelter in place":{chi:.34},"Shielding the elderly":{xi:.5,indices:[[0,-1],[1,-1],[-1,0],[-1,1],[-1,-1]]}};class p{constructor(d,a,c=5.1,i=.034,j=6.3,m=17.8,b=B,o=A.length){if(a.length!==d.length)throw new Error("Each contact matrix requires an epoch end time.");this.contacts=d,this.epoch_end_times=a,this.alpha=1/c,this.beta=i,this.gamma=1/j,this.delta=1/m,this.kappa=b,this.N_cohorts=o,this.compartments=COMPARTMENTS,this.N_compartments=6,this.s=0,this.e=1,this.i=2,this.m=3,this.r=4,this.d=5}}p.prototype._fetch_contact=function(d){for(let a=0;a<this.contacts.length;a++)if(d<=this.epoch_end_times[a])return this.contacts[a]},p.prototype.f=function(d,a){if(isNaN(d))throw new Error("t can't be NaN");if(a.data)throw new Error("y should be an array, not ndarray");if(a.find(isNaN))throw new Error("y can't contain NaN");a=h.array(a,[this.N_cohorts,this.N_compartments]);let c=h.zeros([this.N_cohorts,this.N_compartments]),i=this._fetch_contact(d);i||console.error("oh no: ",[d,h.unpack(this.contacts)]);let j=Array.from(Array(this.N_cohorts).keys());for(let b of j){let o=j.map(l=>this.beta*i.get(b,l)*(a.get(l,this.i)+a.get(l,this.m))/h.sum(a.pick(l,null))).reduce((l,r)=>l+r);c.set(b,this.s,-a.get(b,this.s)*o),c.set(b,this.e,a.get(b,this.s)*o-this.alpha*a.get(b,this.e)),c.set(b,this.i,this.alpha*(1-this.kappa[b])*a.get(b,this.e)-this.gamma*a.get(b,this.i)),c.set(b,this.m,this.alpha*this.kappa[b]*a.get(b,this.e)-this.delta*a.get(b,this.m)),c.set(b,this.r,this.gamma*a.get(b,this.i)),c.set(b,this.d,this.delta*a.get(b,this.m))}let m=h.unpack(h.array(c.data));if(m.find(isNaN))throw new Error("it broke, there's NaN",m);return m},p.prototype.solve=function(d){let a=new y.Solver(18),c=this.epoch_end_times.slice(-1)[0],i=[],j=[];return a.denseOutput=!0,a.solve(this.f.bind(this),0,d,c,a.grid(1,(m,b)=>{i.push(m),j.push(b)})),[i,j.flat()]};const w=(d,...a)=>d.map((c,i)=>a.reduce((j,m)=>[...j,m[i]],[c]));p.model_input=function(d,a,c,i,j=E){let m=function(g){return g.slice(0,-1).map((n,e)=>g.slice(e,e+2))},b=function(g,n){let e=g.flat().concat(0,n).sort((f,k)=>f-k);return m(Array.from(new Set(e)))},o=function(g,n){return length=n-g,Array.from(Array(length),(e,f)=>f+g)},l=function(g,n){let e=o(...g),f=o(...n);return e.filter(k=>f.includes(k)).length>1},r=function(g,n,e){let f=n[g]||{};if(f.cohort_chi)return h.muleq(e,h.pack(f.cohort_chi)),e;if(f.chi)return h.mulseq(e,f.chi),e;for(let[k,q]of f.indices||[]){k=k<0?e.shape[0]+k:k,q=q<0?e.shape[1]+q:q;let x=e.get(k,q);if(x===void 0)throw"impact could not be applied";e.set(k,q,x*f.xi)}return e},t=b(a,i),s=[],u=["Cancel mass gatherings","School closure","Shielding the elderly"];for(let g of t){let n=h.pack(h.unpack(d)),e=a[c.indexOf("Shelter in place")];for(let[f,k]of w(a,c)){let q=u.includes(k);if(q&&l(g,e))continue;l(f,g)&&(n=r(k,j,n))}s.push(n)}let v=t.map(g=>g[1]);return[s,v]};let F=d=>h.unpack(d).map(a=>w(...a).map(c=>c.reduce((i,j)=>i+j)));p.generateData=function(d,a,c){let i=1e6,j=0,m=c,b=.001,o=h.unpack(WORLD_POP[d]).map(f=>f*i),l=o.map(f=>[f*(1-2*b),f*b,f*b,0,0,0]),[r,t]=p.model_input(CONTACT_MATRICES_0[d],Object.values(a),Object.keys(a),m-j),s=new p(r,t),[u,v]=s.solve(l.flat()),g=h.array(v,[u.length,s.N_cohorts,s.N_compartments]),n=z(F(g)),e={};return COMPARTMENTS.forEach((f,k)=>e[f]=n[k]),e["Combined Infected"]=e.Infected.map((f,k)=>f+e["Severely Infected"][k]),e.cohortDeaths=h.unpack(g.pick(m,null,5)),e};export default p;
