import E from"../web_modules/odex.js";import l from"./num.js";import I from"./unzip.js";export let COMPARTMENTS=["Susceptible","Exposed","Infected","Severely Infected","Recovered","Dead"];let T=["0-19","20-59","60+"],w=[1e-4,.0032,.0328];export let WORLD_POP={Africa:[.507,.438,.055],Americas:[.293,.541,.166],Asia:[.312,.558,.131],Europe:[.211,.532,.257]};Object.keys(WORLD_POP).forEach(o=>WORLD_POP[o]=l.array(WORLD_POP[o]));let x=l.pack([[7.86,5.22,.5],[2.37,7.69,1.06],[1.19,5.38,1.92]]);function k(o,e){let i=o,r=e,c=l.zeros([i.size,i.size]);return i.data.forEach((d,t)=>{i.data.forEach((u,p)=>{let _=(r.get(t,p)*i.get(t)+r.get(p,t)*i.get(p))/(2*i.get(t));c.set(t,p,_)})}),c}export let CONTACT_MATRICES_0={};Object.keys(WORLD_POP).forEach(o=>CONTACT_MATRICES_0[o]=k(WORLD_POP[o],x));let O={"Cancel mass gatherings":{chi:.72},Quarantine:{chi:.63},"Quarantine and tracing":{chi:.48},"School closure":{cohort_chi:[[.25,.8,1.52],[.8,.74,1],[1.52,1,1]]},"Shelter in place":{chi:.34},"Shielding the elderly":{xi:.5,indices:[[0,-1],[1,-1],[-1,0],[-1,1],[-1,-1]]}};class g{constructor(o,e,i=5.1,r=.034,c=6.3,d=17.8,t=w,u=T.length){if(e.length!==o.length)throw new Error("Each contact matrix requires an epoch end time.");this.contacts=o,this.epoch_end_times=e,this.alpha=1/i,this.beta=r,this.gamma=1/c,this.delta=1/d,this.kappa=t,this.N_cohorts=u,this.compartments=COMPARTMENTS,this.N_compartments=6,this.s=0,this.e=1,this.i=2,this.m=3,this.r=4,this.d=5}}g.prototype._fetch_contact=function(o){for(let e=0;e<this.contacts.length;e++)if(o<=this.epoch_end_times[e])return this.contacts[e]},g.prototype.f=function(o,e){if(isNaN(o))throw new Error("t can't be NaN");if(e.data)throw new Error("y should be an array, not ndarray");if(e.find(isNaN))throw new Error("y can't contain NaN");e=l.array(e,[this.N_cohorts,this.N_compartments]);let i=l.zeros([this.N_cohorts,this.N_compartments]),r=this._fetch_contact(o);r||console.error("oh no: ",[o,l.unpack(this.contacts)]);let c=Array.from(Array(this.N_cohorts).keys());for(let t of c){let u=c.map(p=>this.beta*r.get(t,p)*(e.get(p,this.i)+e.get(p,this.m))/l.sum(e.pick(p,null))).reduce((p,_)=>p+_);i.set(t,this.s,-e.get(t,this.s)*u),i.set(t,this.e,e.get(t,this.s)*u-this.alpha*e.get(t,this.e)),i.set(t,this.i,this.alpha*(1-this.kappa[t])*e.get(t,this.e)-this.gamma*e.get(t,this.i)),i.set(t,this.m,this.alpha*this.kappa[t]*e.get(t,this.e)-this.delta*e.get(t,this.m)),i.set(t,this.r,this.gamma*e.get(t,this.i)),i.set(t,this.d,this.delta*e.get(t,this.m))}let d=l.unpack(l.array(i.data));if(d.find(isNaN))throw new Error("it broke, there's NaN",d);return d},g.prototype.solve=function(o){let e=new E.Solver(18),i=this.epoch_end_times.slice(-1)[0],r=[],c=[];return e.denseOutput=!0,e.solve(this.f.bind(this),0,o,i,e.grid(1,(d,t)=>{r.push(d),c.push(t)})),[r,c.flat()]};const S=(o,...e)=>o.map((i,r)=>e.reduce((c,d)=>[...c,d[r]],[i]));g.model_input=function(o,e,i,r,c=O){let d=function(n){return n.slice(0,-1).map((f,a)=>n.slice(a,a+2))},t=function(n,f){let a=n.flat().concat(0,f).sort((s,h)=>s-h);return d(Array.from(new Set(a)))},u=function(n,f){return length=f-n,Array.from(Array(length),(a,s)=>s+n)},p=function(n,f){let a=u(...n),s=u(...f);return a.filter(h=>s.includes(h)).length>1},_=function(n,f,a){let s=f[n]||{};if(s.cohort_chi)return l.muleq(a,l.pack(s.cohort_chi)),a;if(s.chi)return l.mulseq(a,s.chi),a;for(let[h,m]of s.indices||[]){h=h<0?a.shape[0]+h:h,m=m<0?a.shape[1]+m:m;let A=a.get(h,m);if(A===void 0)throw"impact could not be applied";a.set(h,m,A*s.xi)}return a},y=t(e,r),v=[],b=["Cancel mass gatherings","School closure","Shielding the elderly"];for(let n of y){let f=l.pack(l.unpack(o)),a=e[i.indexOf("Shelter in place")];for(let[s,h]of S(e,i)){let m=b.includes(h);if(m&&p(n,a))continue;p(s,n)&&(f=_(h,c,f))}v.push(f)}let N=y.map(n=>n[1]);return[v,N]};let C=o=>l.unpack(o).map(e=>S(...e).map(i=>i.reduce((r,c)=>r+c)));g.generateData=function(o,e,i){let r=1e6,c=0,d=i,t=.001,u=l.unpack(WORLD_POP[o]).map(s=>s*r),p=u.map(s=>[s*(1-2*t),s*t,s*t,0,0,0]),[_,y]=g.model_input(CONTACT_MATRICES_0[o],Object.values(e),Object.keys(e),d-c),v=new g(_,y),[b,N]=v.solve(p.flat()),n=l.array(N,[b.length,v.N_cohorts,v.N_compartments]),f=I(C(n)),a={};return COMPARTMENTS.forEach((s,h)=>a[s]=f[h]),a["Combined Infected"]=a.Infected.map((s,h)=>s+a["Severely Infected"][h]),a.cohortDeaths=l.unpack(n.pick(d,null,5)),a};export default g;
